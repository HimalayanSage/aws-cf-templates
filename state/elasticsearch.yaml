---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'State: Elasticsearch, a cloudonaut.io template'
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  ParentClientStack:
    Description: 'Stack name of parent client stack based on state/client-sg.yaml template.'
    Type: String
  ParentZoneStack:
    Description: 'Optional stack name of parent zone stack based on vpc/vpc-zone-*.yaml template.'
    Type: String
    Default: ''
  ParentSSHBastionStack:
    Description: 'Optional but recommended stack name of parent SSH bastion host/instance stack based on vpc/vpc-ssh-bastion.yaml template.'
    Type: String
    Default: ''
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
    Type: String
    Default: ''
  DomainName:
    Description: 'A name for the Amazon ES domain.'
    Type: String
  EBSEnabled:
    Description: 'Specifies whether Amazon EBS volumes are attached to data nodes in the Amazon ES domain (some instance types come with instance store that you can use instead).'
    Type: String
    AllowedValues: [true, false]
    Default: true
  EBSVolumeSize:
    Description: 'he size of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached.'
    Type: Number
    Default: 10
  ClusterInstanceCount:
    Description: 'The number of data nodes (instances) to use in the Amazon ES domain.'
    Type: Number
    Default: 1
  ClusterInstanceType:
    Description: 'The instance type for your data nodes.'
    Type: 'String'
    Default: 't2.micro.elasticsearch'
  SubDomainName:
    Description: 'Name that is used to create the DNS entry ${SubDomainName}.${HostedZoneName} (required when ParentZoneStack is set, otherwise not considered)'
    Type: String
    Default: elasticsearch
Conditions:
  HasZone: !Not [!Equals [!Ref ParentZoneStack, '']]
  HasSSHBastionSecurityGroup: !Not [!Equals [!Ref ParentSSHBastionStack, '']]
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
  HasSingleClusterInstance: !Equals [!Ref ClusterInstanceCount, '1']
  HasAlertTopicAndNotSingleClusterInstance: !And [!Condition HasAlertTopic, !Not [!Condition HasSingleClusterInstance]]
Resources:
  RecordSet:
    Condition: HasZone
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId:
        'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId'
      Name: !Sub
      - '${SubDomainName}.${HostedZoneName}'
      - SubDomainName: !Ref SubDomainName
        HostedZoneName:
          'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'
      ResourceRecords:
      - !GetAtt 'ElasticsearchDomain.DomainEndpoint'
      TTL: 60
      Type: CNAME
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId:
          'Fn::ImportValue': !Sub '${ParentClientStack}-ClientSecurityGroup'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
  SecurityGroupInSSHBastion:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasSSHBastionSecurityGroup
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId:
        'Fn::ImportValue': !Sub '${ParentSSHBastionStack}-SecurityGroup'
  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - 'es:ESHttp*'
          Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
      DomainName: !Ref 'DomainName'
      EBSOptions:
        EBSEnabled: !Ref EBSEnabled
        VolumeSize: !Ref EBSVolumeSize
        VolumeType: gp2
      ElasticsearchClusterConfig:
        InstanceCount: !Ref ClusterInstanceCount
        InstanceType: !Ref ClusterInstanceType
        ZoneAwarenessEnabled: !If [HasSingleClusterInstance, false, true]
      ElasticsearchVersion: '5.5'
      SnapshotOptions:
        AutomatedSnapshotStartHour: 10
      VPCOptions:
        SecurityGroupIds:
        - !Ref SecurityGroup
        SubnetIds:
        - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPrivate'
        - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetBPrivate'
  ClusterStatusYellowAlarm:
    Condition: HasAlertTopicAndNotSingleClusterInstance
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Replica shards for at least one index are not allocated to nodes in a cluster'
      Namespace: 'AWS/ES'
      MetricName: 'ClusterStatus.yellow'
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterStatusRedAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Primary and replica shards of at least one index are not allocated to nodes in a cluster'
      Namespace: 'AWS/ES'
      MetricName: 'ClusterStatus.red'
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterCPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/ES'
      MetricName: 'CPUUtilization'
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterFreeStorageSpaceTooLowAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Cluster is running out of storage space'
      Namespace: 'AWS/ES'
      MetricName: 'FreeStorageSpace'
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: LessThanThreshold
      Threshold: 2000 # 2GB in MB
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterIndexWritesBlockedTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Cluster is blocking incoming write requests'
      Namespace: 'AWS/ES'
      MetricName: 'ClusterIndexWritesBlocked'
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterJVMMemoryPressureTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average JVM memory pressure over last 10 minutes higher than 80%'
      Namespace: 'AWS/ES'
      MetricName: 'JVMMemoryPressure'
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterAutomatedSnapshotFailureTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'No automated snapshot was taken for the domain in the previous 36 hours'
      Namespace: 'AWS/ES'
      MetricName: 'AutomatedSnapshotFailure'
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
  ClusterKibanaHealthyNodesTooLowAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Kibana is inaccessible'
      Namespace: 'AWS/ES'
      MetricName: 'KibanaHealthyNodes'
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: LessThanThreshold
      Threshold: 1
      AlarmActions:
      - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
      - Name: ClientId
        Value: !Ref 'AWS::AccountId'
      - Name: DomainName
        Value: !Ref ElasticsearchDomain
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id'
    Value: 'state/elasticsearch'
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
  DNSName:
    Description: "The domain-specific endpoint that's used to submit index, search, and data upload requests to an Amazon ES domain."
    Value: !GetAtt 'ElasticsearchDomain.DomainEndpoint'
    Export:
      Name: !Sub '${AWS::StackName}-DNSName'
